#!/usr/bin/env bash
#
## \file
## \author Eric Crosson <eric.s.crosson@utexas.edu>
## \brief Generate doxygen documentation for the entire RToS project.
## \copyright WTFPLv2
## \version 1.0
#
#########
# License:
#
#             DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#                    Version 2, December 2004
#
# Copyright (C) 2015 Eric Crosson
#
# Everyone is permitted to copy and distribute verbatim or modified
# copies of this license document, and changing it is allowed as long
# as the name is changed.
#
#            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE
#   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
#
#  0. You just DO WHAT THE FUCK YOU WANT TO.
#
#########
#
## \details
## \par Script abstract
##
## Generate doxygen documentation for the entire RToS project.
##
## \par Usage
## Only invocation matters; all arguments will be ignored.
#
## \addtogroup Doxygen Doxygen tools

# Execute getopt
ARGS=$(getopt -o nh -l "dry-run,help" -n "$0" -- "$@");

# Fail on bad arguments
if [ $? -ne 0 ]; then
    exit 1
fi

eval set -- "${ARGS}";

## @var HELP_GENERATE_DOXYGEN
## @brief Contains script invocation information
## @details Contains script invocation information and abstract.
## @ingroup Doxygen
declare HELP_GENERATE_DOXYGEN
HELP_GENERATE_DOXYGEN=$(cat <<'EOF'
$0 : Generate doxygen documentation for the entire RToS project.

Usage : [-h] [-n] [-p]

  -h : print this help menu
  -n : dry-run -- don't execute anything
  -p : push newly generated doxygen html to gh-pages branch [TODO]

EOF
)

# TODO: allow -p to be functional

## @var execute_generate_doxygen
## @brief For internal use only.
## @details The context with which to execute commands: normal or echo
## @ingroup Doxygen
declare -l execute_generate_doxygen=""

# Obey command line arguments
while true; do
    case "$1" in

	-n|--dry_run)
	    # Transform the context in which openocd is invoked
	    execute_generate_doxygen=echo
	    ;;

	-h|--help)
	    echo -e "${HELP_GENERATE_DOXYGEN}"
	    exit
	    ;;

	--)
	    shift
	    break ;;
    esac
    shift
done

# Doxygen the bin directory
${execute_generate_doxygen} pushd $(dirname $(readlink -e "$0")) &>/dev/null
${execute_generate_doxygen} mkdir -p ../doc/html/bin
${execute_generate_doxygen} doxygen Doxyfile

# Doxygen the main project
${execute_generate_doxygen} pushd .. &>/dev/null
${execute_generate_doxygen} doxygen Doxyfile

# todo: update the gh-pages branch and push.
#
# See http://www.mpdaugherty.com/blog/updating-github-pages-automatically/
